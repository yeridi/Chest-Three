/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef, useState, useEffect } from 'react'
import { useFrame } from 'react-three-fiber'
import { useGLTF } from '@react-three/drei/useGLTF'
import {useSpring, a} from 'react-spring/three'

//Sounds
import chesOpenSound from '../../assets/sound/open-chest.mp3'
import chesCloseSound from '../../assets/sound/close-chest.mp3'

const openChest = new Audio(chesOpenSound)
const closeChest = new Audio(chesCloseSound)

export default function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('../../../coffre-minecraft.glb')
  
  //open function
  const handleOpen = ()=>{
    props.setOpen(!props.open);
    openChest.volume = .3;
    closeChest.volume = .3;
    props.open ? closeChest.play():openChest.play();
  }

  const openChestAnimation = useSpring({
    rotation:props.open ? [0,0,0] : [1.61,0,0],
    position:props.open ? [0,-1.5,0] : [0,0,0],
  })

  return (
    <group onClick={handleOpen} ref={group} {...props} dispose={null}>
      <a.group rotation={openChestAnimation.position} position={[0, -0.99, 0]}>
        <primitive object={nodes.Bone} />
        <a.primitive rotation={openChestAnimation.rotation} object={nodes.Bone001} />
        <skinnedMesh material={materials.Material} geometry={nodes.Cube.geometry} skeleton={nodes.Cube.skeleton} castShadow/>
      </a.group>
    </group>
  )
}

useGLTF.preload('../../../coffre-minecraft.glb')
